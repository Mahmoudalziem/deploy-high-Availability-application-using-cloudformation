Description: >
    Azima 

Parameters:
    ProjectName:
        Description: Project Name
        Type: String
Resources:
  RoleForS3: 
      Type: "AWS::IAM::Role"
      Properties:
          AssumeRolePolicyDocument:
              Version: "2012-10-17"
              Statement:
                  - Effect: Allow
                    Principal:
                      Service:
                          - ec2.amazonaws.com
                    Action:
                      - 'sts:AssumeRole'
          ManagedPolicyArns:
              - arn:aws:iam::aws:policy/AmazonS3FullAccess
  ServerProfile: 
      Type: "AWS::IAM::InstanceProfile"
      Properties: 
          Roles: 
            - !Ref RoleForS3
  LoadBalancerSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http 
      VpcId:
        Fn::ImportValue:
          !Sub "${ProjectName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0 
      SecurityGroupEgress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
  WServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http 
      VpcId:
        Fn::ImportValue:
          !Sub "${ProjectName}-VPCID"
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
      - IpProtocol: -1
        FromPort: -1
        ToPort: -1
        CidrIp: 0.0.0.0/0
  WAppLaunchConfiguration:
      Type: AWS::AutoScaling::LaunchConfiguration
      Properties:
        ImageId: ami-02f3416038bdb17fb
        IamInstanceProfile: !Ref ServerProfile
        UserData:
          Fn::Base64: !Sub |
            #!/bin/bash
            sudo apt update -y
            sudo apt install apache2 -y
            echo "<p>it works! Udagram, Udacity</p>" > /var/www/html/index.html
        SecurityGroups:
        - Ref: WServerSecurityGroup
        InstanceType: t2.micro
        BlockDeviceMappings:
        - DeviceName: "/dev/sdk"
          Ebs:
            VolumeSize: '10'
  WAppAutoScalingGroup:
      Type: AWS::AutoScaling::AutoScalingGroup
      Properties:
        VPCZoneIdentifier:
        - Fn::ImportValue: 
            !Sub "${ProjectName}-PRIV-SUBs"
        LaunchConfigurationName:
          Ref: WAppLaunchConfiguration
        MinSize: '4'
        MaxSize: '6'
        TargetGroupARNs:
        - Ref: WAppTargetGroup
  WAppLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Subnets:
      - Fn::ImportValue: !Sub "${ProjectName}-PUB1-SUB"
      - Fn::ImportValue: !Sub "${ProjectName}-PUB2-SUB"
      SecurityGroups:
      - Ref: LoadBalancerSecGroup
  Listener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
      - Type: forward
        TargetGroupArn:
          Ref: WAppTargetGroup
      LoadBalancerArn:
        Ref: WAppLoadBalancer
      Port: '80'
      Protocol: HTTP
  ListenerRule:
      Type: AWS::ElasticLoadBalancingV2::ListenerRule
      Properties:
        Actions:
        - Type: forward
          TargetGroupArn: !Ref 'WAppTargetGroup'
        Conditions:
        - Field: path-pattern
          Values: [/]
        ListenerArn: !Ref 'Listener'
        Priority: 1
  WAppTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 10
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 8
      HealthyThresholdCount: 2
      Port: 80
      Protocol: HTTP
      UnhealthyThresholdCount: 5
      VpcId: 
        Fn::ImportValue:
          Fn::Sub: "${ProjectName}-VPCID"
  JumpboxSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
          GroupDescription: Allow SSH only to my IP Address
          VpcId:
              Fn::ImportValue:
                  !Sub "${ProjectName}-VPCID"
          SecurityGroupIngress:
              - IpProtocol: tcp
                FromPort: 22
                ToPort: 22
                CidrIp: 0.0.0.0/0
          SecurityGroupEgress:
              - IpProtocol: -1
                FromPort: -1
                ToPort: -1
                CidrIp: 0.0.0.0/0
  JumpboxServer:
      Type: AWS::EC2::Instance
      Properties:
          InstanceType: t2.micro
          ImageId: ami-02f3416038bdb17fb
          KeyName: test1
          NetworkInterfaces:
              - AssociatePublicIpAddress: "true" 
                DeviceIndex: "0"
                GroupSet: 
                  - Ref: "JumpboxSecurityGroup"
                SubnetId: 
                  Fn::ImportValue:
                    !Sub "${ProjectName}-PUB1-SUB" 
          UserData:
                Fn::Base64: !Sub |
                  #!/bin/bash
  
Outputs: 
  LoadBalancerURL: 
      Description: Load Balancer URL
      Value: !Sub http://${WAppLoadBalancer.DNSName}
      Export:
        Name: !Sub "${ProjectName}-LB-URL"
 

    